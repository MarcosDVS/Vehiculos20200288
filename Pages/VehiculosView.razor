@page "/Car"
@using Vehiculo20200288.Data.Models
@using Vehiculo20200288.Data.Services

<PageTitle>Listar Vehiculos</PageTitle>

<h1>Listar Vehiculos</h1>
<hr>

<label for="">Marca</label>
<input @bind="SelectCar.Marca" type="text" name="" id="">

<label for="">Modelo</label>
<input @bind="SelectCar.Modelo" type="text" name="" id="">

<label for="">Año</label>
<input @bind="SelectCar.Año" type="number" >
<br>
<br>
<label for="">Color</label>
<input @bind="SelectCar.Color" type="text" name="" id="">

<button @onclick="Guardar" class="btn btn-success" ><span class="oi oi-plus"></span>
</button>
<button @onclick="clean" class="btn btn-warning">Refresh</button>

<table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Marca</th>
                <th>Modelo</th>
                <th>Año</th>
                <th>Color</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Vehiculo in Vehiculos)
            {
                <tr>
                    <td>@Vehiculo.VehiculoID</td>
                    <td>@Vehiculo.Marca</td>
                    <td>@Vehiculo.Modelo</td>
                    <td>@Vehiculo.Año</td>
                    <td>@Vehiculo.Color</td>
                    <td>
                        <div class="btn-group">
                            <button class="btn btn-warning" @onclick="()=>Editar(Vehiculo.VehiculoID)">
                                <span class="oi oi-pencil"></span>
                            </button>
                            
                            <button class="btn btn-danger" @onclick="()=>Eliminar(Vehiculo.VehiculoID)">
                                <span class="oi oi-trash"></span>
                            </button>
                        </div>
                    </td>    
                </tr>
            }
        </tbody>
    </table>

@code 
{
    //Llama la clase Vehiculo asignandole una variable 
    public Vehiculo? SelectCar { get; set; } = new Vehiculo();

    //List<Vehiculo> es un arreglo de la clase Vehiculo al cual se le asigno el
        //nombe Vehiculos para interactuar con el arreglo
    public List<Vehiculo>? Vehiculos { get; set; }
    = new List<Vehiculo>()
    {
        //Introduce datos en el arreglo mediante codigo
        new Vehiculo(){
        VehiculoID = 1,
        Marca= "Toyota",
        Modelo = "Camry",
        Año = 2022,
        Color = "Blanco"
        },
        new Vehiculo(){
        VehiculoID = 2,
        Marca= "Honda",
        Modelo = "Civic",
        Año = 2016,
        Color = "Negro"
        },
    };
    void Editar(int Id)
    {
        //Edita el vehiculo seleccionado
        SelectCar = Vehiculos!.FirstOrDefault(p => p.VehiculoID == Id) ?? new Vehiculo();
    }

    void Eliminar(int Id)
    {
        SelectCar = Vehiculos!.FirstOrDefault(p => p.VehiculoID == Id);
        if (SelectCar != null)
        {
            //Elimina el vehiculo seleccionado
            Vehiculos!.Remove(SelectCar);
            SelectCar = new Vehiculo();
        }
    }

    void Guardar()
    {
        if (
        !string.IsNullOrEmpty(SelectCar!.Marca) &&
        !string.IsNullOrEmpty(SelectCar!.Modelo) &&
        !string.IsNullOrEmpty(SelectCar!.Color)
        )
        {
            if (SelectCar.VehiculoID == 0)
            {
                //Asigna un Id a cada vehiculo
                SelectCar.VehiculoID = 
                Vehiculos.Count>0? (Vehiculos!.Max(p => p.VehiculoID) + 1) : 1;
                //Agrega los vehiculos a la clase
                Vehiculos!.Add(SelectCar);
                SelectCar = new Vehiculo();
                return;
            }
            var indice = Vehiculos!.FindIndex(p => p.VehiculoID == SelectCar.VehiculoID);
            Vehiculos![indice] = SelectCar;
            SelectCar = new Vehiculo();
        }
    }

    void clean()
    {
        SelectCar.Marca= string.Empty;
        SelectCar.Modelo=string.Empty;
        SelectCar.Año=2002;
        SelectCar.Modelo=string.Empty;
    }

}